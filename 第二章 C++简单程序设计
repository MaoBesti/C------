C++的特点和程序实例
兼容C，支持面向对象的程序设计
支持面向对象的方法
支持泛型程序设计方法

//2_1.cpp
#include<iostream>
using namespace std;
int main()
{
   cout<<"Hello!"<<endl;
   cout<<"Welcome to c++!"<<endl;
   return 0;
}

C++ 字符集和词法记号

关键字：C++预定义的单词
标识符
文字
分隔符
运算符
空白符


基本数据类型，常量，变量
C++能够处理的基本数据类型：整数类型，浮点数类型，字符类型，布尔类型
常量
变量:
//符号常量
符号常量在定义时一定要初始化，在程序中间不能改变其值
const double PI 3.1415926

算术运算与赋值运算
算术运算
基本算术运算符
+ - * /(若整数相除，结果取整)
% （取余，操作数为整数）

优先级与结合性： 先乘除，后加减，同级自左向右
复合的赋值运算符
10种复合运算符: += -= *= /= %= <<= >>= &= ^= |=

逗号运算，关系运算，逻辑运算和条件运算
逗号运算和逗号表达式
关系运算时比较简单的一种逻辑运算，关系表达式是一种最简单的逻辑表达式，其结果类型为bool型，
值只能为true 或false。

逻辑运算符：! && || (非  与  或) 优先次序由高到低
逻辑运算结果类型：bool ，其值只能为true或false

条件运算符与条件表达式
一般形式
表达式1? 表达式2：表达式3
表达式1 必须是bool类型
执行顺序：
先求解表达式1，表达式的结果为真求解表达式2，结果作为条件运算结果；否则求解表达式3，结果作为条件运算结果。
条件运算符优先级高于赋值运算符，低于逻辑运算符。

sizeof运算 ，位运算
sizeof(类型名) 或sizeof 表达式
结果值：类型名所指定的类型，或表达式的结果类型所占的字节数

运算符优先级，类型转换
优先级     运算符                                                           结合性

1          [ ]  ( )  .  –>    后置 ++   后置 ––                            左→右
2          前置 ++   前置 ––   sizeof   &   *   +（正号）  –（负号） ~  !   右→左
3         （强制转换类型）                                                  右→左
4          .*   ->*                                                        左→右
5          *  /  %                                                         左→右
6          +  –                                                            左→右
7          << >>                                                           左→右
8          < > <=  >=                                                      左→右
9          ==  !=                                                          左→右
10         &                                                               左→右
11         ^                                                                左→右
12         |                                                               左→右
13        &&                                                               左→右
14        ||                                                               左→右
15        ? :                                                              右→左
16        =  *=  /=  %= +=  –=  <<=  >>=&=  ^=  |=                         右→左
17        ,                                                                左→右
